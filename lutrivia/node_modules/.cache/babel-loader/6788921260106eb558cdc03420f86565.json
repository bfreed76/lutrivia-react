{"ast":null,"code":"var _jsxFileName = \"/home/brinton/Development/Phase2/week3/lutrivia-react/lutrivia/src/Gameboard.js\";\nimport React, { Component } from 'react';\nimport QuestionCards from './QuestionCards';\nimport NameForm from './NameForm';\nexport default class Gameboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentScore: 0,\n      userName: \"\",\n      savedScores: {}\n    };\n\n    this.changeScore = () => {\n      console.log(\"changeScore triggered\");\n      this.setState({\n        currentScore: this.state.currentScore + 1\n      });\n    };\n\n    this.saveScore = e => {\n      e.preventDefault();\n      debugger;\n      console.log('save score worked', e.target.value);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Lutrivia\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Score: \", this.state.currentScore), this.props.questions.map(question => React.createElement(QuestionCards, {\n      question: question,\n      changeScore: this.changeScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(NameForm, {\n      saveScore: this.saveScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/brinton/Development/Phase2/week3/lutrivia-react/lutrivia/src/Gameboard.js"],"names":["React","Component","QuestionCards","NameForm","Gameboard","state","currentScore","userName","savedScores","changeScore","console","log","setState","saveScore","e","preventDefault","target","value","render","props","questions","map","question"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,eAAe,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE7CI,KAF6C,GAErC;AACJC,MAAAA,YAAY,EAAE,CADV;AAEJC,MAAAA,QAAQ,EAAE,EAFN;AAGJC,MAAAA,WAAW,EAAE;AAHT,KAFqC;;AAAA,SAQ7CC,WAR6C,GAQ/B,MAAM;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,WAAKC,QAAL,CAAc;AACVN,QAAAA,YAAY,EAAE,KAAKD,KAAL,CAAWC,YAAX,GAA0B;AAD9B,OAAd;AAGH,KAb4C;;AAAA,SAe7CO,SAf6C,GAehCC,CAAD,IAAO;AACfA,MAAAA,CAAC,CAACC,cAAF;AACA;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCG,CAAC,CAACE,MAAF,CAASC,KAA1C;AACH,KAnB4C;AAAA;;AAqB7CC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY,KAAKb,KAAL,CAAWC,YAAvB,CAFJ,EAGK,KAAKa,KAAL,CAAWC,SAAX,CAAqBC,GAArB,CAAyBC,QAAQ,IAAI,oBAAC,aAAD;AAAe,MAAA,QAAQ,EAAEA,QAAzB;AAAmC,MAAA,WAAW,EAAE,KAAKb,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArC,CAHL,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAE,KAAKI,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ;AASH;;AA/B4C","sourcesContent":["import React, { Component } from 'react'\nimport QuestionCards from './QuestionCards'\nimport NameForm from './NameForm'\n\nexport default class Gameboard extends Component {\n\n    state = {\n        currentScore: 0,\n        userName: \"\",\n        savedScores: {}\n    }\n\n    changeScore = () => {\n        console.log(\"changeScore triggered\")\n        this.setState({\n            currentScore: this.state.currentScore + 1\n        })\n    }\n\n    saveScore = (e) => {\n        e.preventDefault()\n        debugger\n        console.log('save score worked', e.target.value)\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Lutrivia</h1>       \n                <h2>Score: {this.state.currentScore}</h2>\n                {this.props.questions.map(question => <QuestionCards question={question} changeScore={this.changeScore} />)}\n                <br></br>\n                <NameForm saveScore={this.saveScore}/>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}